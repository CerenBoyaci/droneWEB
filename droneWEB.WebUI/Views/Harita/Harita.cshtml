@{
    ViewData["Title"] = "Harita";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

<h2>Harita</h2>

<div id="map" style="width:100%; height:500px;"></div>

<div style="margin-top:20px;">
    <input type="text" id="ulke" placeholder="Ülke" />
    <input type="text" id="sehir" placeholder="Şehir" />
    <input type="text" id="mahalle" placeholder="Mahalle" />
    <input type="text" id="sokak" placeholder="Sokak" />
    <input type="text" id="no" placeholder="No" />
    <input type="text" id="baslik" placeholder="Başlık" />
    <input type="number" id="enlem" placeholder="Enlem" step="0.000001" />
    <input type="number" id="boylam" placeholder="Boylam" step="0.000001" />
    <button onclick="adresAra()">Adres ile Göster</button>
    <button onclick="koordinataGit()">Koordinat ile Göster</button>
    <button onclick="ekleMarker()">Marker Kaydet</button>
</div>

<script>
    var map = L.map('map').setView([39.9208, 32.8541], 13);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);

    var markersLayer = L.layerGroup().addTo(map);
    var secilenMarker = null;

    // -------------------------------
    // Adres ile geocoding
    // -------------------------------
    async function adresAra() {
        const ulke = document.getElementById('ulke').value;
        const sehir = document.getElementById('sehir').value;
        const mahalle = document.getElementById('mahalle').value;
        const sokak = document.getElementById('sokak').value;
        const no = document.getElementById('no').value;

        const query = [no, sokak, mahalle, sehir, ulke].filter(Boolean).join(', ');

        if (!query) { alert("En az bir adres bilgisi girin!"); return; }

        const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}`;

        try {
            const response = await fetch(url);
            const data = await response.json();
            if (data.length === 0) { alert("Adres bulunamadı!"); return; }

            const lat = parseFloat(data[0].lat);
            const lon = parseFloat(data[0].lon);

            document.getElementById('enlem').value = lat.toFixed(6);
            document.getElementById('boylam').value = lon.toFixed(6);

            if (secilenMarker) markersLayer.removeLayer(secilenMarker);

            secilenMarker = L.marker([lat, lon]).addTo(markersLayer)
                .bindPopup(document.getElementById('baslik').value || "Seçilen Yer")
                .openPopup();

            map.setView([lat, lon], 16);
        } catch (error) { console.error("Adres arama hatası:", error); }
    }

    // -------------------------------
    // Koordinat ile reverse geocoding
    // -------------------------------
    async function koordinataGit() {
        const enlem = parseFloat(document.getElementById('enlem').value);
        const boylam = parseFloat(document.getElementById('boylam').value);

        if (isNaN(enlem) || isNaN(boylam)) { alert("Geçerli koordinat girin!"); return; }

        if (secilenMarker) markersLayer.removeLayer(secilenMarker);

        secilenMarker = L.marker([enlem, boylam]).addTo(markersLayer)
            .bindPopup(document.getElementById('baslik').value || "Seçilen Yer")
            .openPopup();

        map.setView([enlem, boylam], 16);

        // Reverse Geocoding ile adres doldur
        const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${enlem}&lon=${boylam}&addressdetails=1`;
        try {
            const response = await fetch(url);
            const data = await response.json();
            const address = data.address || {};

            document.getElementById('ulke').value = address.country || '';
            document.getElementById('sehir').value = address.city || address.town || address.village || '';
            document.getElementById('mahalle').value = address.suburb || address.neighbourhood || '';
            document.getElementById('sokak').value = address.road || '';
            document.getElementById('no').value = address.house_number || '';
        } catch (error) { console.error("Adres alınamadı:", error); }
    }

    // -------------------------------
    // Marker kaydet
    // -------------------------------
    async function ekleMarker() {
        const baslik = document.getElementById('baslik').value;
        const enlem = parseFloat(document.getElementById('enlem').value);
        const boylam = parseFloat(document.getElementById('boylam').value);

        if (!baslik || isNaN(enlem) || isNaN(boylam)) {
            alert("Lütfen başlık girin ve adresi/koordinatı gösterin!");
            return;
        }

        try {
            const response = await fetch('https://localhost:7130/api/Haritalama/olustur', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ baslik, enlem, boylam })
            });

            if (response.ok) {
                alert("Marker kaydedildi!");
                document.getElementById('baslik').value = '';
                document.getElementById('ulke').value = '';
                document.getElementById('sehir').value = '';
                document.getElementById('mahalle').value = '';
                document.getElementById('sokak').value = '';
                document.getElementById('no').value = '';
                document.getElementById('enlem').value = '';
                document.getElementById('boylam').value = '';
            } else {
                alert("Marker kaydedilemedi!");
            }
        } catch (error) { console.error("Marker kaydetme hatası:", error); }
    }
</script>
